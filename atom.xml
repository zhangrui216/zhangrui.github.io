<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://zhangrui216.github.io</id>
    <title>Hexo</title>
    <subtitle></subtitle>
    <icon>http://zhangrui216.github.io/images/favicon.ico</icon>
    <link href="http://zhangrui216.github.io" />
    <author>
      <name>Zhang rui</name>
    </author>
    <updated>2022-03-21T12:15:02.000Z</updated>
    <entry>
        <id>http://zhangrui216.github.io/2022/03/21/Redis%E5%AD%A6%E4%B9%A0/</id>
        <title>Redis学习</title>
        <link rel="alternate" href="http://zhangrui216.github.io/2022/03/21/Redis%E5%AD%A6%E4%B9%A0/"/>
        <content type="html">&lt;p&gt;&lt;a name=&#34;u0mTh&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;redis基础知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis基础知识&#34;&gt;#&lt;/a&gt; redis 基础知识&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;dKVVZ&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;一什么是redis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一什么是redis&#34;&gt;#&lt;/a&gt; 一。什么是 redis？&lt;/h2&gt;
&lt;p&gt;简单来说 &lt;strong&gt;Redis 就是一个使用 C 语言开发的数据库&lt;/strong&gt;，不过与传统数据库不同的是 &lt;strong&gt;Redis 的数据是存在内存中的&lt;/strong&gt; ，也就是它是内存数据库，所以读写速度非常快，因此 Redis 被广泛应用于缓存方向。&lt;br /&gt;另外，&lt;strong&gt;Redis 除了做缓存之外，也经常用来做分布式锁，甚至是消息队列。&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;Redis 提供了多种数据类型来支持不同的业务场景。Redis 还支持事务 、持久化、Lua 脚本、多种集群方案。&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;一句话概括：redis 是作快速存储的非关系型数据库，用于做数据缓存，微服务的中间件。&lt;/strong&gt;&lt;br /&gt;
&lt;a name=&#34;f6eXL&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;二redis能干什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二redis能干什么&#34;&gt;#&lt;/a&gt; 二.redis 能干什么？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据缓存 (最常用)&lt;/strong&gt;：提升高频数据的读取效率，提高响应速度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式锁&lt;/strong&gt; ： 通过 Redis 来做分布式锁是一种比较常见的方式。通常情况下，我们都是基于 Redisson 来实现分布式锁。相关阅读：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvQ2JuUFJmdnE0bTFzcW8ydUtJNnFRdw==&#34;&gt;《分布式锁中的王者方案 - Redisson》&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;限流&lt;/strong&gt; ：一般是通过 Redis + Lua 脚本的方式来实现限流。相关阅读：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3Mva3lGQVdIM21WTkp2dXJRRHQ0dmNoQQ==&#34;&gt;《我司用了 6 年的 Redis 分布式限流器，可以说是非常厉害了！》&lt;/span&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消息队列&lt;/strong&gt; ：Redis 自带的 list 数据结构可以作为一个简单的队列使用。Redis5.0 中增加的 Stream 类型的数据结构更加适合用来做消息队列。它比较类似于 Kafka，有主题和消费组的概念，支持消息持久化以及 ACK 机制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;复杂业务场景&lt;/strong&gt; ：通过 Redis 以及 Redis 扩展（比如 Redisson）提供的数据结构，我们可以很方便地完成很多复杂的业务场景比如通过 bitmap 统计活跃用户、通过 sorted set 维护排行榜。&lt;br /&gt;
&lt;a name=&#34;GD5l2&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三去哪下使用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三去哪下使用命令&#34;&gt;#&lt;/a&gt; 三。去哪下 &amp;amp; 使用命令&lt;/h2&gt;
&lt;p&gt;访问 redis 官网进行下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWRpcy5pby8=&#34;&gt;redis 官网&lt;/span&gt;&lt;br /&gt;安装使用教程可参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnVub29iLmNvbS9yZWRpcy9yZWRpcy1pbnN0YWxsLmh0bWw=&#34;&gt;菜鸟教程&lt;/span&gt;&lt;br /&gt;
&lt;a name=&#34;PVStB&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;redis面试相关问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis面试相关问题&#34;&gt;#&lt;/a&gt; redis 面试相关问题&lt;/h1&gt;
&lt;p&gt;&lt;a name=&#34;K1sX8&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;一缓存穿透&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一缓存穿透&#34;&gt;#&lt;/a&gt; 一。缓存穿透&lt;/h2&gt;
&lt;p&gt;&lt;a name=&#34;GNlru&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;1什么是缓存穿透&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1什么是缓存穿透&#34;&gt;#&lt;/a&gt; 1. 什么是缓存穿透&lt;/h5&gt;
&lt;p&gt;我们使用 Redis 大部分情况都是通过 Key 查询对应的值，假如发送的请求传进来的 key 是不存在 Redis 中的，那么就查不到缓存，查不到缓存就会去数据库查询。假如有大量这样的请求，这些请求像 “穿透” 了缓存一样直接打在数据库上，这种现象就叫做缓存穿透。&lt;br /&gt;&lt;strong&gt;简单来说，就是请求传进来不存在的 key 值，导致 redis 失效，请求打到了数据库上，导致数据库压力剧增。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;fFyaZ&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;2缓存穿透会产生什么问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2缓存穿透会产生什么问题&#34;&gt;#&lt;/a&gt; 2. 缓存穿透会产生什么问题？&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;缓存穿透的情况是传进来的 key 在 Redis 中是不存在的&lt;/strong&gt;。&lt;br /&gt;假如有黑客传进大量的不存在的 key，那么大量的请求打在数据库上是很致命的问题，会导致数据库压力剧增，可用性降低甚至造成数据库宕机。&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;rxykA&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;3怎么避免缓存穿透&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3怎么避免缓存穿透&#34;&gt;#&lt;/a&gt; 3. 怎么避免缓存穿透&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;采用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTUlQjglODMlRTklOUElODYlRTglQkYlODclRTYlQkIlQTQlRTUlOTklQTgmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw&#34;&gt;布隆过滤器&lt;/span&gt;，将所有可能存在的数据存到一个 bitMap 中，不存在的数据就会进行拦截。（建议）&lt;/li&gt;
&lt;li&gt;对查询结果为空的情况也进行缓存，缓存时间设置短一点，不超过 5 分钟。（不建议）&lt;br /&gt;
&lt;a name=&#34;lu78v&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二缓存击穿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二缓存击穿&#34;&gt;#&lt;/a&gt; 二。缓存击穿&lt;/h2&gt;
&lt;p&gt;&lt;a name=&#34;mQa5J&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;1什么是缓存击穿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1什么是缓存击穿&#34;&gt;#&lt;/a&gt; 1. 什么是缓存击穿？&lt;/h5&gt;
&lt;p&gt;其实跟缓存雪崩有点类似，缓存雪崩是大规模的 key 失效，而缓存击穿是一个热点的 Key，有大并发集中对其进行访问，突然间这个 Key 失效了，导致大并发全部打在数据库上，导致数据库压力剧增。这种现象就叫做缓存击穿。&lt;br /&gt;&lt;strong&gt;简单来说，就是设置在 redis 的某个热点 key 到期失效了，此时大并发集中对其进行访问，导致大量请求打到数据库。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;VyTbn&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;2缓存击穿会产生什么问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2缓存击穿会产生什么问题&#34;&gt;#&lt;/a&gt; 2. 缓存击穿会产生什么问题？&lt;/h5&gt;
&lt;p&gt;关键在于某个热点的 key 失效了，导致大并发集中打在数据库上，可能造成短时间内查询效率降低，或者造成数据库不可用。&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;mPjYy&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;3怎么解决缓存击穿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3怎么解决缓存击穿&#34;&gt;#&lt;/a&gt; 3. 怎么解决缓存击穿&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;设置永不过期&lt;/strong&gt;：如果业务允许的话，对于热点的 key 可以设置永不过期的 key。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;查询限流&lt;/strong&gt;：使用互斥锁。如果缓存失效的情况，只有拿到锁才可以查询数据库，降低了在同一时刻打在数据库上的请求，防止数据库打死。当然这样会导致系统的性能变差。&lt;br /&gt;
&lt;a name=&#34;mmxzS&#34;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;三缓存雪崩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三缓存雪崩&#34;&gt;#&lt;/a&gt; 三。缓存雪崩&lt;/h2&gt;
&lt;p&gt;&lt;a name=&#34;Ct9bs&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;1什么是缓存雪崩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1什么是缓存雪崩&#34;&gt;#&lt;/a&gt; 1. 什么是缓存雪崩&lt;/h5&gt;
&lt;p&gt;当某一个时刻出现大规模的缓存失效的情况，那么就会导致大量的请求直接打在数据库上面，导致数据库压力巨大，如果在高并发的情况下，可能瞬间就会导致数据库宕机。这时候如果运维马上又重启数据库，马上又会有新的流量把数据库打死。这就是缓存雪崩。&lt;br /&gt;&lt;strong&gt;简单来说，就是同一时间段内，大量缓存失效过期，导致大量请求打到数据库导致数据库宕机。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;F3uFZ&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;2缓存雪崩产生什么问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2缓存雪崩产生什么问题&#34;&gt;#&lt;/a&gt; 2. 缓存雪崩产生什么问题？&lt;/h5&gt;
&lt;p&gt;缓存雪崩会导致数据库宕机不可用！&lt;br /&gt;
&lt;a name=&#34;diqcn&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h4&gt;
&lt;p&gt;&lt;a name=&#34;NWBow&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;3怎么解决缓存雪崩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3怎么解决缓存雪崩&#34;&gt;#&lt;/a&gt; ３. 怎么解决缓存雪崩&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;失效时间随机分布&lt;/strong&gt;：在原有的失效时间上加上一个随机值，比如 1-5 分钟随机。这样就避免了因为采用相同的过期时间导致的缓存雪崩。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用熔断机制&lt;/strong&gt;：当流量到达一定的阈值时，就直接返回 “系统拥挤” 之类的提示，防止过多的请求打在数据库上。至少能保证一部分用户是可以正常使用，其他用户多刷新几次也能得到结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用分库分表&lt;/strong&gt;：提高数据库的容灾能力，可以使用分库分表，读写分离的策略。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;搭建 Redis 集群&lt;/strong&gt;：为了防止 Redis 宕机导致缓存雪崩的问题，可以搭建 Redis 集群，提高 Redis 的容灾性。&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2022-03-21T12:15:02.000Z</updated>
    </entry>
    <entry>
        <id>http://zhangrui216.github.io/2022/03/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
        <title>我的第一篇文章</title>
        <link rel="alternate" href="http://zhangrui216.github.io/2022/03/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
        <content type="html">&lt;h1 id=&#34;哈哈&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#哈哈&#34;&gt;#&lt;/a&gt; 哈哈&lt;/h1&gt;
&lt;h2 id=&#34;1学习三步走&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1学习三步走&#34;&gt;#&lt;/a&gt; 1. 学习三步走&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;这个技术是什么&lt;/li&gt;
&lt;li&gt;为什么要学习这个技术&lt;/li&gt;
&lt;li&gt;这个技术怎么用&lt;/li&gt;
&lt;li&gt;有什么好处&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2开始思考&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2开始思考&#34;&gt;#&lt;/a&gt; 2. 开始思考&lt;/h2&gt;
&lt;p&gt;何雄辉是傻逼&lt;/p&gt;
</content>
        <updated>2022-03-06T13:08:20.000Z</updated>
    </entry>
    <entry>
        <id>http://zhangrui216.github.io/2022/03/06/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://zhangrui216.github.io/2022/03/06/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/writing.html&#34;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/server.html&#34;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/generating.html&#34;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/one-command-deployment.html&#34;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>2022-03-06T02:52:13.402Z</updated>
    </entry>
</feed>
