{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "subtitle": "",
    "icon": "http://zhangrui216.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "http://zhangrui216.github.io",
    "items": [
        {
            "id": "http://zhangrui216.github.io/2022/03/21/Redis%E5%AD%A6%E4%B9%A0/",
            "url": "http://zhangrui216.github.io/2022/03/21/Redis%E5%AD%A6%E4%B9%A0/",
            "title": "Redis学习",
            "date_published": "2022-03-21T12:15:02.000Z",
            "content_html": "<p><a name=\"u0mTh\"></a></p>\n<h1 id=\"redis基础知识\"><a class=\"anchor\" href=\"#redis基础知识\">#</a> redis 基础知识</h1>\n<p><a name=\"dKVVZ\"></a></p>\n<h2 id=\"一什么是redis\"><a class=\"anchor\" href=\"#一什么是redis\">#</a> 一。什么是 redis？</h2>\n<p>简单来说 <strong>Redis 就是一个使用 C 语言开发的数据库</strong>，不过与传统数据库不同的是 <strong>Redis 的数据是存在内存中的</strong> ，也就是它是内存数据库，所以读写速度非常快，因此 Redis 被广泛应用于缓存方向。<br />另外，<strong>Redis 除了做缓存之外，也经常用来做分布式锁，甚至是消息队列。</strong><br /><strong>Redis 提供了多种数据类型来支持不同的业务场景。Redis 还支持事务 、持久化、Lua 脚本、多种集群方案。</strong><br /><strong>一句话概括：redis 是作快速存储的非关系型数据库，用于做数据缓存，微服务的中间件。</strong><br />\n<a name=\"f6eXL\"></a></p>\n<h2 id=\"二redis能干什么\"><a class=\"anchor\" href=\"#二redis能干什么\">#</a> 二.redis 能干什么？</h2>\n<ul>\n<li><strong>数据缓存 (最常用)</strong>：提升高频数据的读取效率，提高响应速度</li>\n<li><strong>分布式锁</strong> ： 通过 Redis 来做分布式锁是一种比较常见的方式。通常情况下，我们都是基于 Redisson 来实现分布式锁。相关阅读：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvQ2JuUFJmdnE0bTFzcW8ydUtJNnFRdw==\">《分布式锁中的王者方案 - Redisson》</span>。</li>\n<li><strong>限流</strong> ：一般是通过 Redis + Lua 脚本的方式来实现限流。相关阅读：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3Mva3lGQVdIM21WTkp2dXJRRHQ0dmNoQQ==\">《我司用了 6 年的 Redis 分布式限流器，可以说是非常厉害了！》</span>。</li>\n<li><strong>消息队列</strong> ：Redis 自带的 list 数据结构可以作为一个简单的队列使用。Redis5.0 中增加的 Stream 类型的数据结构更加适合用来做消息队列。它比较类似于 Kafka，有主题和消费组的概念，支持消息持久化以及 ACK 机制。</li>\n<li><strong>复杂业务场景</strong> ：通过 Redis 以及 Redis 扩展（比如 Redisson）提供的数据结构，我们可以很方便地完成很多复杂的业务场景比如通过 bitmap 统计活跃用户、通过 sorted set 维护排行榜。<br />\n<a name=\"GD5l2\"></a></li>\n</ul>\n<h2 id=\"三去哪下使用命令\"><a class=\"anchor\" href=\"#三去哪下使用命令\">#</a> 三。去哪下 &amp; 使用命令</h2>\n<p>访问 redis 官网进行下载：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZWRpcy5pby8=\">redis 官网</span><br />安装使用教程可参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9yZWRpcy9yZWRpcy1pbnN0YWxsLmh0bWw=\">菜鸟教程</span><br />\n<a name=\"PVStB\"></a></p>\n<h1 id=\"redis面试相关问题\"><a class=\"anchor\" href=\"#redis面试相关问题\">#</a> redis 面试相关问题</h1>\n<p><a name=\"K1sX8\"></a></p>\n<h2 id=\"一缓存穿透\"><a class=\"anchor\" href=\"#一缓存穿透\">#</a> 一。缓存穿透</h2>\n<p><a name=\"GNlru\"></a></p>\n<h5 id=\"1什么是缓存穿透\"><a class=\"anchor\" href=\"#1什么是缓存穿透\">#</a> 1. 什么是缓存穿透</h5>\n<p>我们使用 Redis 大部分情况都是通过 Key 查询对应的值，假如发送的请求传进来的 key 是不存在 Redis 中的，那么就查不到缓存，查不到缓存就会去数据库查询。假如有大量这样的请求，这些请求像 “穿透” 了缓存一样直接打在数据库上，这种现象就叫做缓存穿透。<br /><strong>简单来说，就是请求传进来不存在的 key 值，导致 redis 失效，请求打到了数据库上，导致数据库压力剧增。</strong></p>\n<p><a name=\"fFyaZ\"></a></p>\n<h5 id=\"2缓存穿透会产生什么问题\"><a class=\"anchor\" href=\"#2缓存穿透会产生什么问题\">#</a> 2. 缓存穿透会产生什么问题？</h5>\n<p><strong>缓存穿透的情况是传进来的 key 在 Redis 中是不存在的</strong>。<br />假如有黑客传进大量的不存在的 key，那么大量的请求打在数据库上是很致命的问题，会导致数据库压力剧增，可用性降低甚至造成数据库宕机。</p>\n<p><a name=\"rxykA\"></a></p>\n<h5 id=\"3怎么避免缓存穿透\"><a class=\"anchor\" href=\"#3怎么避免缓存穿透\">#</a> 3. 怎么避免缓存穿透</h5>\n<ul>\n<li>采用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTUlQjglODMlRTklOUElODYlRTglQkYlODclRTYlQkIlQTQlRTUlOTklQTgmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">布隆过滤器</span>，将所有可能存在的数据存到一个 bitMap 中，不存在的数据就会进行拦截。（建议）</li>\n<li>对查询结果为空的情况也进行缓存，缓存时间设置短一点，不超过 5 分钟。（不建议）<br />\n<a name=\"lu78v\"></a></li>\n</ul>\n<h2 id=\"二缓存击穿\"><a class=\"anchor\" href=\"#二缓存击穿\">#</a> 二。缓存击穿</h2>\n<p><a name=\"mQa5J\"></a></p>\n<h5 id=\"1什么是缓存击穿\"><a class=\"anchor\" href=\"#1什么是缓存击穿\">#</a> 1. 什么是缓存击穿？</h5>\n<p>其实跟缓存雪崩有点类似，缓存雪崩是大规模的 key 失效，而缓存击穿是一个热点的 Key，有大并发集中对其进行访问，突然间这个 Key 失效了，导致大并发全部打在数据库上，导致数据库压力剧增。这种现象就叫做缓存击穿。<br /><strong>简单来说，就是设置在 redis 的某个热点 key 到期失效了，此时大并发集中对其进行访问，导致大量请求打到数据库。</strong></p>\n<p><a name=\"VyTbn\"></a></p>\n<h5 id=\"2缓存击穿会产生什么问题\"><a class=\"anchor\" href=\"#2缓存击穿会产生什么问题\">#</a> 2. 缓存击穿会产生什么问题？</h5>\n<p>关键在于某个热点的 key 失效了，导致大并发集中打在数据库上，可能造成短时间内查询效率降低，或者造成数据库不可用。</p>\n<p><a name=\"mPjYy\"></a></p>\n<h5 id=\"3怎么解决缓存击穿\"><a class=\"anchor\" href=\"#3怎么解决缓存击穿\">#</a> 3. 怎么解决缓存击穿</h5>\n<ul>\n<li><strong>设置永不过期</strong>：如果业务允许的话，对于热点的 key 可以设置永不过期的 key。</li>\n<li><strong>查询限流</strong>：使用互斥锁。如果缓存失效的情况，只有拿到锁才可以查询数据库，降低了在同一时刻打在数据库上的请求，防止数据库打死。当然这样会导致系统的性能变差。<br />\n<a name=\"mmxzS\"></a></li>\n</ul>\n<h2 id=\"三缓存雪崩\"><a class=\"anchor\" href=\"#三缓存雪崩\">#</a> 三。缓存雪崩</h2>\n<p><a name=\"Ct9bs\"></a></p>\n<h5 id=\"1什么是缓存雪崩\"><a class=\"anchor\" href=\"#1什么是缓存雪崩\">#</a> 1. 什么是缓存雪崩</h5>\n<p>当某一个时刻出现大规模的缓存失效的情况，那么就会导致大量的请求直接打在数据库上面，导致数据库压力巨大，如果在高并发的情况下，可能瞬间就会导致数据库宕机。这时候如果运维马上又重启数据库，马上又会有新的流量把数据库打死。这就是缓存雪崩。<br /><strong>简单来说，就是同一时间段内，大量缓存失效过期，导致大量请求打到数据库导致数据库宕机。</strong></p>\n<p><a name=\"F3uFZ\"></a></p>\n<h5 id=\"2缓存雪崩产生什么问题\"><a class=\"anchor\" href=\"#2缓存雪崩产生什么问题\">#</a> 2. 缓存雪崩产生什么问题？</h5>\n<p>缓存雪崩会导致数据库宕机不可用！<br />\n<a name=\"diqcn\"></a></p>\n<h4 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h4>\n<p><a name=\"NWBow\"></a></p>\n<h5 id=\"3怎么解决缓存雪崩\"><a class=\"anchor\" href=\"#3怎么解决缓存雪崩\">#</a> ３. 怎么解决缓存雪崩</h5>\n<ul>\n<li><strong>失效时间随机分布</strong>：在原有的失效时间上加上一个随机值，比如 1-5 分钟随机。这样就避免了因为采用相同的过期时间导致的缓存雪崩。</li>\n<li><strong>使用熔断机制</strong>：当流量到达一定的阈值时，就直接返回 “系统拥挤” 之类的提示，防止过多的请求打在数据库上。至少能保证一部分用户是可以正常使用，其他用户多刷新几次也能得到结果。</li>\n<li><strong>使用分库分表</strong>：提高数据库的容灾能力，可以使用分库分表，读写分离的策略。</li>\n<li><strong>搭建 Redis 集群</strong>：为了防止 Redis 宕机导致缓存雪崩的问题，可以搭建 Redis 集群，提高 Redis 的容灾性。</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://zhangrui216.github.io/2022/03/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/",
            "url": "http://zhangrui216.github.io/2022/03/06/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/",
            "title": "我的第一篇文章",
            "date_published": "2022-03-06T13:08:20.000Z",
            "content_html": "<h1 id=\"哈哈\"><a class=\"anchor\" href=\"#哈哈\">#</a> 哈哈</h1>\n<h2 id=\"1学习三步走\"><a class=\"anchor\" href=\"#1学习三步走\">#</a> 1. 学习三步走</h2>\n<blockquote>\n<ol>\n<li>这个技术是什么</li>\n<li>为什么要学习这个技术</li>\n<li>这个技术怎么用</li>\n<li>有什么好处</li>\n</ol>\n</blockquote>\n<h2 id=\"2开始思考\"><a class=\"anchor\" href=\"#2开始思考\">#</a> 2. 开始思考</h2>\n<p>何雄辉是傻逼</p>\n",
            "tags": []
        },
        {
            "id": "http://zhangrui216.github.io/2022/03/06/hello-world/",
            "url": "http://zhangrui216.github.io/2022/03/06/hello-world/",
            "title": "Hello World",
            "date_published": "2022-03-06T02:52:13.402Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}